---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ArticleCard from '../components/ArticleCard.astro';
import { getCollection } from 'astro:content';
import '../styles/global.css';

// Markdownファイルから記事を取得
const allPosts = await getCollection('blog');
const articles = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3) // 最新3件を表示
  .map(post => ({
    title: post.data.title,
    description: post.data.description,
    image: post.data.heroImage || "https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=64&h=64&fit=crop",
    tags: post.data.tags,
    date: post.data.pubDate.toISOString().split('T')[0],
    slug: post.slug
  }));

const shorts = [
  {
    id: 1,
    title: "Quick tip: CSS Grid auto-fit vs auto-fill",
    content: "auto-fit collapses empty columns, auto-fill preserves them. Use auto-fit for responsive card layouts.",
    tags: ["CSS", "Grid"],
    date: "2024-01-12"
  },
  {
    id: 2,
    title: "JavaScript array method cheat sheet", 
    content: "map() transforms, filter() selects, reduce() accumulates, forEach() iterates without return.",
    tags: ["JavaScript", "Arrays"],
    date: "2024-01-08"
  }
];

function formatShortDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('ja-JP', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
}
---

<Layout title="Blog - Web Development & Programming">
  <Header />
  
  <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Latest Articles Section -->
    <section class="mb-12">
      <h1 class="text-2xl font-semibold text-gray-900 dark:text-white mb-6">
        Latest Articles
      </h1>
      
      <div class="space-y-2">
        {articles.map((article) => (
          <ArticleCard 
            title={article.title}
            description={article.description}
            image={article.image}
            tags={article.tags}
            date={article.date}
            slug={article.slug}
            compact={true}
          />
        ))}
      </div>
    </section>
    
    <!-- Shorts Section -->
    <section>
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-6">
        Shorts
      </h2>
      
      <div class="grid gap-4 md:grid-cols-2">
        {shorts.map((short) => (
          <article class="p-4 rounded-lg bg-gray-50 dark:bg-gray-800/50 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200">
            <h3 class="text-base font-medium text-gray-900 dark:text-white mb-2">
              {short.title}
            </h3>
            
            <p class="text-sm text-gray-600 dark:text-gray-300 mb-3">
              {short.content}
            </p>
            
            <div class="flex items-center justify-between">
              <div class="flex flex-wrap gap-1">
                {short.tags.map((tag) => (
                  <span class="inline-block px-2 py-0.5 text-xs bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded">
                    {tag}
                  </span>
                ))}
              </div>
              
              <time class="text-xs text-gray-500 dark:text-gray-400" datetime={short.date}>
                {formatShortDate(short.date)}
              </time>
            </div>
          </article>
        ))}
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>