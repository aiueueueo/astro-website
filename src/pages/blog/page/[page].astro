---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import ArticleCard from '../../../components/ArticleCard.astro';
import Pagination from '../../../components/Pagination.astro';
import Breadcrumb from '../../../components/Breadcrumb.astro';
import { getCollection } from 'astro:content';
import { getPublishedPosts, sortPostsByDate, transformBlogPost, paginatePosts, calculateTotalPages } from '../../../utils/blog';
import { PAGINATION } from '../../../config/constants';
import StructuredData from '../../../components/StructuredData.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const publishedPosts = getPublishedPosts(allPosts);
  
  const totalPages = calculateTotalPages(publishedPosts.length, PAGINATION.POSTS_PER_PAGE);
  
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 1).toString() },
    props: { 
      page: i + 1,
      totalPages: totalPages
    }
  }));
}

const { page, totalPages } = Astro.props;

const allPosts = await getCollection('blog');
const publishedPosts = sortPostsByDate(getPublishedPosts(allPosts));
const paginatedPosts = paginatePosts(publishedPosts, page, PAGINATION.POSTS_PER_PAGE);
const blogArticles = paginatedPosts.map(transformBlogPost);
---

<Layout title={`Blog - ページ ${page}`} description="Web開発とプログラミングに関する記事一覧">
  <StructuredData type="blog" />
  <Header currentPage="blog" />
  
  <main class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Breadcrumb -->
    <Breadcrumb 
      items={[
        { label: 'Home', href: '/' },
        { label: 'Blog', href: '/blog' },
        { label: `${page}ページ目` }
      ]} 
    />
    
    <!-- Page Title -->
    <div class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white">
        Blog
      </h1>
    </div>

    <!-- Blog Grid -->
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 mb-12">
      {blogArticles.map((article, index) => (
        <ArticleCard {...article} compact={false} eager={index < 3} fromPage={page} />
      ))}
    </div>

    <!-- Pagination -->
    <Pagination 
      currentPage={page}
      totalPages={totalPages}
      baseUrl="/blog"
    />
  </main>
  
  <Footer />
</Layout>