---
export interface Props {
  currentPage?: string;
}

const { currentPage = '' } = Astro.props;
---

<!-- Mobile Menu Button -->
<button
  id="mobile-menu-btn"
  class="md:hidden p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors mr-3"
  aria-label="Toggle mobile menu"
>
  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
  </svg>
</button>

<!-- Mobile Navigation Menu -->
<div 
  id="mobile-menu" 
  class="hidden md:hidden absolute top-16 left-0 right-0 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800 shadow-lg z-40"
>
  <nav class="px-4 py-4 space-y-3">
    <a 
      href="/blog" 
      class={`block px-3 py-2 rounded-lg transition-colors ${
        currentPage === 'blog' 
          ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 font-medium' 
          : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-800'
      }`}
    >
      Blog
    </a>
    <a 
      href="/about" 
      class={`block px-3 py-2 rounded-lg transition-colors ${
        currentPage === 'about' 
          ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 font-medium' 
          : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-800'
      }`}
    >
      About
    </a>
    <a 
      href="/tags" 
      class={`block px-3 py-2 rounded-lg transition-colors ${
        currentPage === 'tags' 
          ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 font-medium' 
          : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-800'
      }`}
    >
      Tags
    </a>
  </nav>
</div>

<script>
  function initMobileMenu() {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuBtn && mobileMenu) {
      mobileMenuBtn.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!mobileMenuBtn.contains(e.target as Node) && !mobileMenu.contains(e.target as Node)) {
          mobileMenu.classList.add('hidden');
        }
      });

      // Close menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          mobileMenu.classList.add('hidden');
        }
      });
    }
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initMobileMenu);
  
  // Re-initialize on navigation
  document.addEventListener('astro:page-load', initMobileMenu);
</script>