---
import { getMetadata, type LinkMetadata } from '../utils/fetchMetadata';

export interface Props {
  href: string;
  metadata?: LinkMetadata;
}

const { href, metadata: providedMetadata } = Astro.props;

// メタデータを取得（事前定義 > 提供された値 > フォールバック）
const metadata = providedMetadata || getMetadata(href);

const isExternal = !href.startsWith('/') && !href.startsWith('#');
const domain = (() => {
  try {
    const url = new URL(href);
    return url.hostname.replace('www.', '');
  } catch {
    return href;
  }
})();

// メタデータがない場合のフォールバック
const title = metadata?.title || domain;
const description = metadata?.description || '';
const image = metadata?.image;
const siteName = metadata?.siteName || domain;
---

<div class="blog-card">
  <a 
    href={href}
    class="block group no-underline hover:no-underline"
    target={isExternal ? "_blank" : undefined}
    rel={isExternal ? "noopener noreferrer" : undefined}
  >
    <article class="border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-300 bg-white dark:bg-gray-800 group-hover:translate-y-[-2px]">
      
      <!-- コンテンツ部分 -->
      <div class="p-4">
        <!-- タイトルと画像の横並び -->
        <div class="flex gap-4 mb-2 relative">
          <!-- 右上の矢印アイコン -->
          <svg class="absolute top-0 right-0 w-4 h-4 text-gray-400 dark:text-gray-500 group-hover:text-blue-500 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
          
          <!-- 左側：タイトルと説明文 -->
          <div class="flex-1 min-w-0 pr-6">
            <!-- タイトル -->
            <div class="text-base font-semibold text-gray-900 dark:text-white line-clamp-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors leading-tight mb-2">
              {title}
            </div>
            
            <!-- 説明文 -->
            {description && (
              <p class="text-sm text-gray-600 dark:text-gray-300 line-clamp-2 leading-relaxed">
                {description}
              </p>
            )}
          </div>
          
          <!-- 画像部分 -->
          {image && (
            <div class="flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden bg-gray-100 dark:bg-gray-700">
              <img 
                src={image} 
                alt={title}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                loading="lazy"
                onError="this.parentElement.style.display='none'"
              />
            </div>
          )}
        </div>
        
        <!-- URL表示 -->
        <div>
          <div class="flex items-center text-xs text-gray-400 dark:text-gray-500">
            <svg class="w-3 h-3 mr-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
            </svg>
            <span class="truncate" title={href}>
              {href.length > 50 ? href.substring(0, 47) + '...' : href}
            </span>
          </div>
        </div>
      </div>
    </article>
  </a>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* プロースタイルのオーバーライド */
  .blog-card a {
    text-decoration: none !important;
    color: inherit !important;
  }
  
  .blog-card a:hover {
    text-decoration: none !important;
  }
  
  
  /* レスポンシブ調整 */
  @media (max-width: 640px) {
    .blog-card article {
      margin: 0.5rem 0;
    }
  }
</style>