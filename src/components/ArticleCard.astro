---
import type { ArticleData } from '../types/blog';
import { formatShortDateString } from '../utils/date';
import { tagToSlug } from '../utils/tags';
import DateBadge from './DateBadge.astro';

export interface Props extends Omit<ArticleData, 'content'> {
  compact?: boolean;
  eager?: boolean;
  fromPage?: number;
}

const { title, description, image, tags, date, slug, compact = false, eager = false, fromPage } = Astro.props;

// 記事リンクにページ番号パラメータを追加
const articleUrl = fromPage ? `/blog/${slug}/?from=${fromPage}` : `/blog/${slug}/`;
---

{compact ? (
  <!-- Compact layout for homepage -->
  <article class="group">
    <a href={articleUrl} class="block rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800/50 transition-all duration-300 ease-out hover:shadow-md dark:hover:shadow-gray-900/20 hover:translate-y-[-1px]">
      <div class="flex gap-4">
        <div class="flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden bg-gray-200 dark:bg-gray-700">
          <img 
            src={image} 
            alt={title}
            class="w-full h-full object-cover group-hover:scale-110 transition-all duration-300"
            loading={eager ? "eager" : "lazy"}
          />
        </div>
        
        <div class="flex-1 min-w-0">
          <DateBadge date={date} class="text-xs text-gray-500 dark:text-gray-400 inline-flex items-center gap-1 px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-md whitespace-nowrap mb-1" />
          
          <h2 class="article-title mb-1 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
            {title}
          </h2>
          
          <p class="article-description mb-1 group-hover:text-gray-700 dark:group-hover:text-gray-200 transition-colors duration-200">
            {description}
          </p>
          
          <div class="flex flex-wrap gap-1">
            {tags.slice(0, 2).map((tag) => (
              <a 
                href={`/tags/${tagToSlug(tag)}/`}
                class="inline-flex items-center px-2 py-0 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded hover:bg-blue-100 dark:hover:bg-blue-900/30 hover:text-blue-700 dark:hover:text-blue-300 transition-colors leading-none h-5"
                onclick="event.stopPropagation()"
              >
                #{tag}
              </a>
            ))}
          </div>
        </div>
      </div>
    </a>
  </article>
) : (
  <!-- Grid layout for blog page -->
  <article class="group bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-xl dark:shadow-gray-900/20 transition-all duration-300 ease-out hover:translate-y-[-4px] hover:ring-1 hover:ring-blue-500/20">
    <a href={articleUrl} class="block relative overflow-hidden">
      <div class="aspect-[4/3] overflow-hidden relative">
        <img 
          src={image} 
          alt={title}
          class="w-full h-full object-cover group-hover:scale-110 transition-all duration-500 ease-out"
          loading={eager ? "eager" : "lazy"}
        />
        <!-- ホバー時のオーバーレイ -->
        <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <!-- 読む アイコン -->
        <div class="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
          <div class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full p-2 shadow-lg">
            <svg class="w-4 h-4 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
            </svg>
          </div>
        </div>
      </div>
      
      <div class="p-6">
        <DateBadge date={date} class="text-xs text-gray-500 dark:text-gray-400 inline-flex items-center gap-1 px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded-md whitespace-nowrap mb-3 group-hover:bg-blue-100 dark:group-hover:bg-blue-900/30 group-hover:text-blue-700 dark:group-hover:text-blue-300 transition-all duration-200" />
        
        <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-2">
          {title}
        </h2>
        
        <p class="text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-3 group-hover:text-gray-700 dark:group-hover:text-gray-200 transition-colors duration-200">
          {description}
        </p>
        
        <div class="flex flex-wrap gap-2 transform group-hover:translate-y-[-2px] transition-transform duration-200">
          {tags.map((tag, index) => (
            <a 
              href={`/tags/${tagToSlug(tag)}/`} 
              class="inline-flex items-center px-2 py-0 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded hover:bg-blue-100 dark:hover:bg-blue-900/30 hover:text-blue-700 dark:hover:text-blue-300 transition-all duration-200 leading-none h-5 transform hover:scale-105 hover:shadow-sm"
              onclick="event.stopPropagation()"
              style={`transition-delay: ${index * 50}ms`}
            >
              #{tag}
            </a>
          ))}
        </div>
      </div>
    </a>
  </article>
)}

