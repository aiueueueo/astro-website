---
// テーマ切り替えコンポーネント
---

<button
  id="theme-toggle"
  class="p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
  aria-label="Toggle theme"
>
  <!-- Light mode icon -->
  <svg 
    id="theme-toggle-light-icon" 
    class="w-5 h-5 hidden" 
    fill="currentColor" 
    viewBox="0 0 20 20"
  >
    <path 
      fill-rule="evenodd" 
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" 
      clip-rule="evenodd"
    />
  </svg>
  
  <!-- Dark mode icon -->
  <svg 
    id="theme-toggle-dark-icon" 
    class="w-5 h-5 hidden" 
    fill="currentColor" 
    viewBox="0 0 20 20"
  >
    <path 
      d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    />
  </svg>
</button>

<script>
  function initThemeToggle() {
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');

    if (!themeToggleBtn || !themeToggleLightIcon || !themeToggleDarkIcon) return;

    function setTheme(theme: 'light' | 'dark') {
      localStorage.setItem('theme', theme);
      
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
        document.documentElement.style.backgroundColor = '#111827';
        document.documentElement.style.colorScheme = 'dark';
        themeToggleLightIcon.classList.remove('hidden');
        themeToggleDarkIcon.classList.add('hidden');
      } else {
        document.documentElement.classList.remove('dark');
        document.documentElement.style.backgroundColor = '#f3f4f6';
        document.documentElement.style.colorScheme = 'light';
        themeToggleLightIcon.classList.add('hidden');
        themeToggleDarkIcon.classList.remove('hidden');
      }
    }

    function getTheme(): 'light' | 'dark' {
      const stored = localStorage.getItem('theme');
      if (stored === 'light' || stored === 'dark') return stored;
      
      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    // Initialize theme
    setTheme(getTheme());

    // Handle theme toggle
    themeToggleBtn.addEventListener('click', () => {
      const currentTheme = getTheme();
      setTheme(currentTheme === 'light' ? 'dark' : 'light');
    });

    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        setTheme(e.matches ? 'dark' : 'light');
      }
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  
  // Re-initialize on navigation
  document.addEventListener('astro:page-load', initThemeToggle);
</script>