---
import { getButtonClasses } from '../lib/utils';

export interface Props {
  title: string;
  url: string;
  description?: string;
  iconsOnly?: boolean;
}

const { title, url, description = '', iconsOnly = false } = Astro.props;
const shareId = 'ss-' + Math.random().toString(36).slice(2);

// Encoded share data
const encodedTitle = encodeURIComponent(title);
const encodedUrl = encodeURIComponent(url);

// Unified button style (match site UI - secondary/sm)
const baseBtn = getButtonClasses('secondary', 'sm', false) + ' gap-1';
---

<div id={shareId} class="flex flex-wrap gap-2">
  <!-- X (Twitter) -->
  <a
    href={`https://twitter.com/intent/tweet?text=${encodedTitle}&url=${encodedUrl}`}
    target="_blank"
    rel="noopener noreferrer"
    class={baseBtn}
    aria-label="Xで共有"
  >
    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
      <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
    </svg>
    {!iconsOnly && (<span class="hidden md:inline" aria-hidden="true">X</span>)}
  </a>

  <!-- Facebook -->
  <a
    href={`https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`}
    target="_blank"
    rel="noopener noreferrer"
    class={baseBtn}
    aria-label="Facebookで共有"
  >
    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
      <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
    </svg>
    {!iconsOnly && (<span class="hidden md:inline" aria-hidden="true">Facebook</span>)}
  </a>

  <!-- LinkedIn -->
  <a
    href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}`}
    target="_blank"
    rel="noopener noreferrer"
    class={baseBtn}
    aria-label="LinkedInで共有"
  >
    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
    </svg>
    {!iconsOnly && (<span class="hidden md:inline" aria-hidden="true">LinkedIn</span>)}
  </a>

  <!-- はてなブックマーク -->
  <a
    href={`https://b.hatena.ne.jp/add?mode=confirm&url=${encodedUrl}&title=${encodedTitle}`}
    target="_blank"
    rel="noopener noreferrer"
    class={baseBtn}
    aria-label="はてなブックマークに追加"
  >
    <span class="font-bold text-sm" aria-hidden="true">B!</span>
    {!iconsOnly && (<span class="hidden md:inline" aria-hidden="true">はてブ</span>)}
  </a>

  <!-- ネイティブ共有（fallback: コピー） -->
  <button
    class={baseBtn + ' js-native-share'}
    aria-label="このページを共有"
    type="button"
    data-share-title={title}
    data-share-url={url}
  >
    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
      <path d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92S19.61 16.08 18 16.08z"/>
    </svg>
    {!iconsOnly && (<span class="hidden md:inline" aria-hidden="true">共有</span>)}
  </button>
</div>

<script>
  (function() {
    try {
      const root = document.getElementById("{shareId}");
      if (!root) return;
      const btn = root.querySelector('.js-native-share');
      if (!btn) return;
      btn.addEventListener('click', async (e) => {
        try {
          e.preventDefault();
          const el = e.currentTarget;
          if (!(el instanceof HTMLElement)) return;
          const title = el.getAttribute('data-share-title') || document.title;
          const url = el.getAttribute('data-share-url') || location.href;

          if (navigator.share) {
            try {
              await navigator.share({ title, url });
              return;
            } catch (err) {
              // ユーザーキャンセル時は何もしない
              if (err && (err.name === 'AbortError' || err.name === 'NotAllowedError')) {
                return;
              }
              // それ以外はコピーにフォールバック
            }
          }

          // Clipboard API
          if (navigator.clipboard && navigator.clipboard.writeText) {
            await navigator.clipboard.writeText(url);
            alert('URLをコピーしました');
            return;
          }

          // レガシーフォールバック
          const ta = document.createElement('textarea');
          ta.value = url;
          ta.style.position = 'fixed';
          ta.style.opacity = '0';
          document.body.appendChild(ta);
          ta.select();
          try {
            document.execCommand('copy');
            alert('URLをコピーしました');
          } catch (_) {
            alert('共有に失敗しました');
          } finally {
            document.body.removeChild(ta);
          }
        } catch (e) {
          console.error('native share failed', e);
          alert('共有に失敗しました');
        }
      });
    } catch (e) {
      // no-op
    }
  })();
</script>
