---
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';

export interface Props {
	title: string;
	description?: string;
	image?: string;
	article?: boolean;
}

const { title, description = "Web開発とプログラミングに関するブログ", image, article = false } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImage = image ? new URL(image, Astro.site) : new URL('/og-image.jpg', Astro.site);
---

<!DOCTYPE html>
<html lang="ja">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/png" href="/favicon.png" />
		<link rel="canonical" href={canonicalURL} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		
		<!-- Prevent flash of wrong theme - 軽量化版 -->
		<script>
			const applyTheme = () => {
				const stored = localStorage.getItem('theme');
				const isDark = stored === 'dark' || (!stored && matchMedia('(prefers-color-scheme: dark)').matches);
				const root = document.documentElement;
				
				root.classList.toggle('dark', isDark);
				root.style.backgroundColor = isDark ? '#111827' : '#f3f4f6';
				root.style.colorScheme = isDark ? 'dark' : 'light';
			};
			
			applyTheme();
			
			// 軽量化されたナビゲーション処理
			document.addEventListener('astro:before-swap', (e) => {
				const bgColor = document.documentElement.classList.contains('dark') ? '#111827' : '#f3f4f6';
				document.documentElement.style.backgroundColor = bgColor;
				if (e.newDocument) e.newDocument.documentElement.style.backgroundColor = bgColor;
			});
			
			document.addEventListener('astro:after-swap', applyTheme);
		</script>
		
		<style>
			html {
				transition: none !important;
			}
			html.dark {
				background-color: #111827 !important;
				color-scheme: dark;
			}
			html:not(.dark) {
				background-color: #f3f4f6 !important;
				color-scheme: light;
			}
			/* Prevent flash during navigation */
			html, body {
				background-color: inherit !important;
			}
			html.dark, html.dark body {
				background-color: #111827 !important;
			}
			html:not(.dark), html:not(.dark) body {
				background-color: #f3f4f6 !important;
			}
		</style>
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content={article ? "article" : "website"} />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={socialImage} />
		<meta property="og:site_name" content="Blog" />
		<meta property="og:locale" content="ja_JP" />
		
		<!-- Twitter -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:url" content={Astro.url} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content={socialImage} />
		
		<!-- Additional SEO -->
		<meta name="robots" content="index, follow" />
		<meta name="author" content="Blog" />
		
		<!-- RSS Feed -->
		<link rel="alternate" type="application/rss+xml" title="Blog RSS Feed" href="/rss.xml" />
		
		<!-- PWA Manifest -->
		<link rel="manifest" href="/manifest.json" />
		<meta name="theme-color" content="#3b82f6" />
		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="default" />
		<meta name="apple-mobile-web-app-title" content="Tech Blog" />
		
		<!-- View Transitions -->
		<ViewTransitions fallback="none" />
		
		<!-- Disable prefetch for better performance -->
		<meta name="astro-prefetch" content="false" />
	</head>
	<body class="min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
		<slot />
		<script>
			// Service Worker Registration - 遅延実行でパフォーマンス向上
			if ('serviceWorker' in navigator) {
				// アイドル時または3秒後に登録
				if (window.requestIdleCallback) {
					window.requestIdleCallback(() => {
						navigator.serviceWorker.register('/sw.js').catch(() => {});
					});
				} else {
					setTimeout(() => {
						navigator.serviceWorker.register('/sw.js').catch(() => {});
					}, 3000);
				}
			}
		</script>
	</body>
</html>

<style>
	html {
		font-family: 'Inter', system-ui, sans-serif;
	}
</style>